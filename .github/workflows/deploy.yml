name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run Database Migrations
        run: npm run db:push
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build frontend
        run: npm run build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}

      - name: Deploy to Replit
        uses: replit/deploy-to-replit@v1
        if: github.repository_owner == 'your-org'
        with:
          replit-token: ${{ secrets.REPLIT_TOKEN }}
          
      # Alternative: Deploy to other platforms
      # - name: Deploy to Railway
      #   run: |
      #     railway up
      #   env:
      #     RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
      
      # - name: Deploy to Vercel
      #   run: npx vercel --prod
      #   env:
      #     VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Health Check
        if: ${{ secrets.HEALTHCHECK_URL != '' }}
        run: |
          sleep 10
          curl -f ${{ secrets.HEALTHCHECK_URL }}/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "Deployment successful!"
          # Add Slack/Discord notification here

      - name: Rollback on failure
        if: failure()
        run: |
          echo "Deployment failed - rolling back..."
          # Add rollback logic here
