Agent 3, we have a major feature update for our project. I need you to integrate the following specifications for a new "Frictionless Invoicing System" into your core knowledge base. This will affect our database schema, our backend architecture, and our UI blueprints.

Please review and integrate the following updates:

UPDATE 1: DATABASE SCHEMA
The following changes need to be made to our Drizzle schema in schema.ts.

SQL

// Add these columns to the 'clients' table
clients {
  // ... (all existing columns)
  retainer_amount: numeric,
  billing_day: integer // e.g., 25 for the 25th of the month
}
// Update the 'invoices' table definition
invoices {
id: uuid (Primary Key),
client_id: uuid (Foreign Key to clients.id),
invoice_number: text,
status: text ('Draft', 'Due', 'Paid', 'Overdue'),
issue_date: date,
due_date: date,
total_amount: numeric,
pdf_url: text
}

// Add the new 'invoice_line_items' table
invoice_line_items {
id: uuid (Primary Key),
invoice_id: uuid (Foreign Key to invoices.id),
description: text,
quantity: integer,
unit_price: numeric,
line_total: numeric,
project_id: uuid (nullable, Foreign Key to projects.id),
task_id: uuid (nullable, Foreign Key to tasks.id)
}


### **UPDATE 2: APPLICATION ARCHITECTURE**
Add the following feature blueprint for our Express backend.

Core Feature: Frictionless Invoicing System
Automated Generation Engine (Express Backend):
>   * Workflow A (Recurring Invoices): A scheduled node-cron job will run monthly to automatically generate retainer invoices.
>   * Workflow B (On-Demand Invoices): An API endpoint will trigger invoice creation when a client approves a paid recommendation.
>   * PDF Generation: Both workflows will generate a PDF, upload it to Supabase Storage, and store the URL.

Proactive Notification Layer:
>   * The Express server will be responsible for sending emails for New Invoices, Payment Reminders, and Payment Confirmations.

UPDATE 3: UI/UX BLUEPRINT
Add the following UI designs for the portals.

Agency Portal UI (Billing)
A Master Billing Dashboard to view all invoices across all clients.

A Client-Specific Billing Tab to view a single client's history.

Manual Actions including a "Mark as Paid" button and a "Create Manual Invoice" form.

Client Portal UI (Billing)
Billing Page: Will feature a "How to Pay" card with bank details, followed by a table of the client's invoices.

HTML Invoice View: Clicking an invoice opens a dedicated page displaying all line items. Line items linked to projects/tasks must be clickable links to those items in the portal. A "Download PDF" button must be present.

Please confirm that you have integrated this new "Frictionless Invoicing System" blueprint into your knowledge base.

Once confirmed, let's begin with the first step. Please generate the Drizzle schema code for the invoices and invoice_line_items tables, and show the necessary additions to the clients table. Prepare this code to be added to the schema.ts file.