Of course. It's a beautiful Friday morning here in Cape Town. Let's upgrade the "Constitution" for your Replit AI, Agent 3, to include the full blueprint for this sophisticated GA4 OAuth integration.

This updated prompt will provide the AI with the new database requirements and the complete technical and user workflow for this feature.

How to Use This Update
This is an update, not a replacement. You will add the new sections below to your existing Replit AI System Instructions.

In your Replit project, open the AI Chat pane and find your System Instructions.

Merge the content:

Copy the two new table definitions and add them to the end of your existing # 3. DATABASE SCHEMA section.

Copy the entire new ## Core Feature... section and add it to the end of your existing # 4. APPLICATION ARCHITECTURE section.

(Copy the sections below and add them to your existing Replit AI prompt)

UPDATED SYSTEM INSTRUCTIONS FOR AGENT 3
// --- INSTRUCTIONS FOR YOU --- //
// Add the two new tables below to your existing # 3. DATABASE SCHEMA section.

// CLIENT INTEGRATIONS (Stores encrypted API tokens)
client_integrations {
  id: uuid (Primary Key),
  client_id: uuid (Foreign Key to clients.id),
  service_name: text, // e.g., 'GA4', 'Google Ads'
  access_token: text, // IMPORTANT: This will be encrypted before saving.
  refresh_token: text, // IMPORTANT: This will be encrypted before saving.
  expires_at: timestamp,
  ga4_property_id: text // The specific GA4 property ID selected by the AM.
}

// CLIENT OBJECTIVES (Stores client goals)
client_objectives {
  id: uuid (Primary Key),
  client_id: uuid (Foreign Key to clients.id),
  description: text, // e.g., 'Increase qualified organic leads by 20% in Q4'
  target_metric: text, // e.g., 'conversions', 'sessions'
  is_active: boolean
}
// --- INSTRUCTIONS FOR YOU --- //
// Add the entire new feature blueprint below to your existing # 4. APPLICATION ARCHITECTURE section.

## Core Feature: GA4 Integration via OAuth
This is a primary feature of the portal. It allows Account Managers to securely connect a client's Google Analytics 4 account to our system.

### User Workflow:

Agency Portal: An Account Manager (AM) navigates to a client's page, goes to an "Integrations" tab, and clicks "Enable Connection" for GA4.

Client Portal: The client sees a notification prompting them to connect. They click a "[Connect with Google]" button.

Google Auth: The client is redirected to Google's standard OAuth consent screen to grant our application permission.

Success: The client is redirected back to the Client Portal with a success message.

Agency Portal: The AM now sees the connection is "Active" and can select the specific GA4 Property ID from a dropdown list of properties available to that client.

### Technical Workflow (Next.js API Routes):

The entire OAuth 2.0 flow will be handled by server-side API Routes in our Next.js application.

Route 1: /app/api/oauth/google/initiate/route.ts

This route's job is to generate the unique Google OAuth consent URL.

It must include the correct scopes for the Google Analytics Data API (read-only access).

It will redirect the client to this URL.

Route 2: /app/api/oauth/google/callback/route.ts

This route handles the redirect from Google after a user grants permission.

It will receive a temporary authorization_code from Google.

It must perform a secure, server-to-server exchange of this code for an access_token and a refresh_token.

It will then save these tokens to the client_integrations table.

### Secure Token Handling (CRITICAL):

All access_token and refresh_token values MUST be encrypted on the server before being stored in the database.

The encryption key will be a secret, stored securely using Replit Secrets (process.env.ENCRYPTION_KEY).

### System Integration:

The Data Ingestion Edge Function (ETL) will be updated. It will now fetch the encrypted tokens from client_integrations, decrypt them in memory, and use them to make authenticated API calls to GA4. It will also handle token refreshes using the refresh_token.

The AI Recommendation Engine will be updated. It will now also query the client_objectives table to make its recommendations more relevant and aligned with the client's stated goals.

### Client Dashboard UI Update:

The dashboard in the Client Portal will display the description from the client_objectives table.

The charts will be powered by the daily_metrics table.

The recommendation workflow (AM approve -> Client approve with upsell/retainer choice) remains the same, but the recommendations themselves are now smarter.